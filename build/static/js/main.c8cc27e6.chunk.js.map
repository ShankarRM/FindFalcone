{"version":3,"sources":["component/Planet.jsx","component/Vehicle.jsx","config.js","Util/HttpRequest.js","Service/planets.js","Service/vehicles.js","Util/Util.js","component/LaunchPad.jsx","component/DisplayMessage.jsx","App.js","serviceWorker.js","index.js"],"names":["getSuggestionValue","suggestion","name","Planet","renderSuggestion","react_default","a","createElement","id","_this","props","className","state","isLoaded","selectedItem","suggestions","value","getSuggestions","inputValue","trim","toLowerCase","inputLength","length","filter","planet","slice","onSuggestionsFetchRequested","_ref","setState","onChange","event","_ref2","newValue","index","findIndex","p","destination","target","parentElement","onSuggestionsClearRequested","this","_this$state","inputProps","placeholder","dist_default","Component","Vehicle","map","vehicle","key","type","speed","disabled","distance","max_distance","total_no","e","onClick","myConfig","HttpGet","resource","url","concat","fetch","method","headers","then","response","json","HttpPost","body","mode","Content-Type","Accept","PlanetApi","VehicleApi","data","Message","FindFalcon","planet_names","vehicle_names","Promise","resolve","reject","JSON","stringify","token","status","error","planet_name","calculateTravelTime","selectedVehicle","selectedPlanet","LaunchPad","Destinations","isVehicleVisible","Vehicles","Planets","travelTime","visitedPlanet","visitedVehicle","isOpen","isDisabled","onPlanetChange","Object","toConsumableArray","console","log","i","indexofselectedPlanet","indexOf","onVehicleChange","indexofselectedVehicle","Text","checked","splice","push","onFindFalcon","history","pathname","_this2","isVehicleLoaded","isPlanetLoaded","_this3","component_Planet","component_Vehicle","reactstrap_es","color","Color","toggle","onDismiss","DisplayMessage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","location","class","style","textAlign","App","BrowserRouter","Link","to","rel","href","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uRAEMA,EAAqB,SAAAC,GAAU,OAAIA,EAAWC,MA8ErCC,6MA3EbC,iBAAmB,SAAAH,GAAU,OAC3BI,EAAAC,EAAAC,cAAA,OAAKC,GAAIC,EAAKC,MAAMR,MAClBG,EAAAC,EAAAC,cAAA,KAAGI,UAAU,sBACZV,EAAWC,SAGhBU,MAAQ,CACNC,UAAU,EACVC,aAAc,GACdC,YAAa,GACbC,MAAO,MAMTC,eAAiB,SAAAD,GACf,IAAME,EAAaF,EAAMG,OAAOC,cAC1BC,EAAcH,EAAWI,OAC/B,OAAuB,IAAhBD,EACH,GACAZ,EAAKC,MAAMM,MAAMO,OACf,SAAAC,GAAM,OACJA,EAAOtB,KAAKkB,cAAcK,MAAM,EAAGJ,KAAiBH,OAG9DQ,4BAA8B,SAAAC,GAAe,IAAZX,EAAYW,EAAZX,MAC/BP,EAAKmB,SAAS,CACZb,YAAaN,EAAKQ,eAAeD,QAGrCa,SAAW,SAACC,EAADC,GAAyB,IAAfC,EAAeD,EAAfC,SACnBvB,EAAKmB,SAAS,CACZZ,MAAOgB,IAET,IAAMC,EAAQxB,EAAKC,MAAMM,MAAMkB,UAAU,SAAAC,GAAC,OAAIA,EAAEjC,OAAS8B,IACnDI,EAC4C,KAAhDN,EAAMO,OAAOC,cAAcA,cAAc9B,GACrCsB,EAAMO,OAAO7B,GACbsB,EAAMO,OAAOC,cAAcA,cAAc9B,GAC/CC,EAAKC,MAAMmB,SAASO,EAAa3B,EAAKC,MAAMM,MAAMiB,OAGpDM,4BAA8B,WAC5B9B,EAAKmB,SAAS,CACZb,YAAa,yFA/BfyB,KAAKZ,SAAS,CAAEf,UAAU,qCAkCnB,IAAA4B,EACwBD,KAAK5B,MAA5BI,EADDyB,EACCzB,MAAOD,EADR0B,EACQ1B,YACT2B,EAAa,CACjBC,YAAa,WACb3B,QACAa,SAAUW,KAAKX,UAEjB,OAAKW,KAAK5B,MAAMC,SAEL2B,KAAK5B,MAAMC,SAElBR,EAAAC,EAAAC,cAAA,OAAKC,GAAIgC,KAAK9B,MAAMR,MAClBG,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CACES,YAAaA,EACbW,4BAA6Bc,KAAKd,4BAClCa,4BAA6BC,KAAKD,4BAClCvC,mBAAoBA,EACpBI,iBAAkBoC,KAAKpC,iBACvBsC,WAAYA,EACZlC,GAAIgC,KAAK9B,MAAMR,aAVhB,EADEG,EAAAC,EAAAC,cAAA,gCAzDQsC,aCwBNC,mLA1BJ,IAAArC,EAAA+B,KACP,OACEnC,EAAAC,EAAAC,cAAA,WACGiC,KAAK9B,MAAMM,MAAM+B,IAAI,SAACC,EAASf,GAAV,OACpB5B,EAAAC,EAAAC,cAAA,OAAK0C,IAAKhB,GACR5B,EAAAC,EAAAC,cAAA,SACE2C,KAAK,QACLhD,KAAMO,EAAKC,MAAMR,KACjBM,GAAI,MAAQC,EAAKC,MAAMR,KACvBc,MAAOgC,EAAQG,MACfC,SACE3C,EAAKC,MAAM2C,SAAWL,EAAQM,cAC9BN,EAAQO,UAAY,EAEtB1B,SAAU,SAAA2B,GAAC,OAAI/C,EAAKC,MAAM+C,QAAQD,EAAEnB,OAAQW,MAE9C3C,EAAAC,EAAAC,cAAA,YACGyC,EAAQ9C,KADX,KACmB8C,EAAQO,SAD3B,gBAjBUV,aCDTa,EACF,oCADEA,EAEF,WAFEA,EAGD,YCFCC,EAAU,SAAAC,GACrB,IAAIC,EAAG,GAAAC,OAAMJ,GAANI,OAAyBF,GAChC,OAAOG,MAAMF,EAAK,CAChBG,OAAQ,MACRC,QAAS,KACRC,KAAK,SAAAC,GACN,OAAOA,EAASC,UAGPC,EAAW,SAACT,EAAUU,GACjC,IAAIT,EAAG,GAAAC,OAAMJ,GAANI,OAAyBF,GAChC,OAAOG,MAAMF,EAAK,CAChBG,OAAQ,OACRO,KAAM,OACND,KAAMA,EACNL,QAAS,CACPO,eAAgB,mBAChBC,OAAQ,uBChBDC,EACN,WACH,OAAOf,EAAQD,ICDNiB,EACN,WACH,OAAOhB,EAAQD,GAAmBQ,KAAK,SAAAU,GACrC,OAAOA,aCLTC,EAAU,GACDC,EAAa,SAACC,EAAcC,GACvC,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3Bd,EAAS,UACNH,KAAK,SAAAU,GAAI,OAAIA,EAAKR,SAClBF,KAAK,SAAAC,GACJE,EACE,QACAe,KAAKC,UAAU,CACbC,MAAOnB,EAASmB,MAChBP,aAAcA,EACdC,cAAeA,KAGhBd,KAAK,SAAAU,GAAI,OAAIA,EAAKR,SAClBF,KAAK,SAAAC,GACJU,EAAU,CACRU,OAAQpB,EAASoB,OAASpB,EAASoB,OAAS,GAC5CC,MAAOrB,EAASqB,MAAQrB,EAASqB,MAAQ,GACzCC,YAAatB,EAASsB,aAGxBP,EAAQL,UAKPa,EAAsB,SAACC,EAAiBC,GAInD,OAHeA,EAAevC,SAElBsC,EAAgBxC,OC4Kf0C,6MAnMbjF,MAAQ,CACNkF,aAAc,CACZ,CACE5F,KAAM,iBACNc,MAAO,eACP+E,kBAAkB,GAEpB,CACE7F,KAAM,iBACNc,MAAO,eACP+E,kBAAkB,GAEpB,CACE7F,KAAM,iBACNc,MAAO,eACP+E,kBAAkB,GAEpB,CACE7F,KAAM,iBACNc,MAAO,eACP+E,kBAAkB,IAItBC,SAAU,GACVC,QAAS,GACTL,eAAgB,GAChBD,gBAAiB,GACjBO,WAAY,EACZC,cAAe,GACfC,eAAgB,GAChBvB,QAAS,GACTwB,QAAQ,EACRC,YAAY,KAedC,eAAiB,SAACnE,EAAawD,GAC7B,IAAME,EAAYU,OAAAC,EAAA,EAAAD,CAAO/F,EAAKG,MAAMkF,cACpC,GAAIF,EAAgB,CAClBc,QAAQC,IAAIlG,EAAKG,MAAMqF,SACvB,IAAMhE,EAAQ6D,EAAa5D,UAAU,SAAA0E,GAAC,OAAIA,EAAE5F,QAAUoB,IAEhDyE,EAAwBpG,EAAKG,MAAMqF,QAAQa,QAAQlB,GAEzD,IAA+B,IAA3BiB,EAA8B,CAChC,IAAMjB,EAAiBnF,EAAKG,MAAMqF,QAAQY,GAE1Cf,EAAa7D,GAAO8D,kBAAmB,EACvCtF,EAAKmB,SAAS,CAAEkE,eAAcF,wBAKpCmB,gBAAkB,SAACvD,EAAGmC,GACpB,IAAMM,EAAOO,OAAAC,EAAA,EAAAD,CAAO/F,EAAKG,MAAMqF,SACzBE,EAAaK,OAAAC,EAAA,EAAAD,CAAO/F,EAAKG,MAAMuF,eAC/BC,EAAcI,OAAAC,EAAA,EAAAD,CAAO/F,EAAKG,MAAMwF,gBAChCJ,EAAQQ,OAAAC,EAAA,EAAAD,CAAO/F,EAAKG,MAAMoF,UAE5BE,EAAazF,EAAKG,MAAMsF,WAEtBW,EAAwBZ,EAAQ/D,UACpC,SAAA0E,GAAC,OAAIA,EAAE1G,OAASO,EAAKG,MAAMgF,eAAe1F,OAEtC8G,EAAyBhB,EAASc,QAAQnB,GAEhD,GAAkC,KAA9BlF,EAAKG,MAAMgF,eAMb,OALAnF,EAAKmB,SAAS,CACZiD,QAAS,CAAEoC,KAAM,8BACjBZ,QAAQ,IAEV7C,EAAE0D,SAAU,GACL,EAGTjB,EAAQkB,OAAON,EAAuB,GACtCb,EAASgB,GAAwBzD,WAEjC2C,GAAcR,EACZC,EACAlF,EAAKG,MAAMgF,gBAGbO,EAAciB,KAAK3G,EAAKG,MAAMgF,eAAe1F,MAC7CkG,EAAegB,KAAKzB,EAAgBzF,MAEpCO,EAAKmB,SAAS,CACZuE,gBACAC,iBACAT,kBACAM,UACAL,eAAgB,GAChBM,aACAI,WAAsC,KAAzBH,EAAc7E,QAA0C,IAA1B8E,EAAe9E,YAI9D+F,aAAe,WACbvC,EAAWrE,EAAKG,MAAMuF,cAAe1F,EAAKG,MAAMwF,gBAAgBlC,KAC9D,SAAAW,GACEpE,EAAKmB,SAAS,CACZiD,UACAwB,QAAQ,IAEV5F,EAAKC,MAAM4G,QAAQF,KAAK,CACtBG,SAAU,kBACV3G,MAAO,CACLiE,UACAqB,WAAYzF,EAAKG,MAAMsF,oGApFb,IAAAsB,EAAAhF,KAClBA,KAAKZ,SAAS,CAAEoE,SAAU,KAC1BxD,KAAKZ,SAAS,CAAEqE,QAAS,KAEzBtB,IAAiBT,KAAK,SAAA8B,GACpBwB,EAAK5F,SAAS,CAAEoE,WAAUyB,iBAAiB,MAE7C/C,IAAgBR,KAAK,SAAA+B,GACnBuB,EAAK5F,SAAS,CAAEqE,UAASyB,gBAAgB,uCAmFpC,IAAAC,EAAAnF,KACP,OACEnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACZ6B,KAAK5B,MAAMkF,aAAa/C,IAAI,SAAAX,GAAW,OACtC/B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWsC,IAAKb,EAAYpB,OACzCX,EAAAC,EAAAC,cAAA,MAAII,UAAU,eAAeyB,EAAYlC,MACzCG,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKC,GAAImH,EAAKjH,MAAMM,OAClBX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAACqH,EAAD,CACE/F,SAAU8F,EAAKpB,eACfvF,MAAO2G,EAAK/G,MAAMqF,QAClB/F,KAAMkC,EAAYpB,QAEpBX,EAAAC,EAAAC,cAAA,OAAKC,GAAImH,EAAKjH,MAAMM,OACjBoB,EAAY2D,iBACX1F,EAAAC,EAAAC,cAACsH,EAAD,CACEpE,QAASkE,EAAKZ,gBACd/F,MAAO2G,EAAK/G,MAAMoF,SAClBxF,GAAImH,EAAK/G,MAAMI,MACfd,KAAMkC,EAAYpB,MAClBqC,SAAU,IAGZ,mCAWlBhD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CACEC,MAAOvF,KAAK5B,MAAMiE,QAAQmD,MAC1B3B,OAAQ7D,KAAK5B,MAAMyF,OACnB4B,OAAQzF,KAAK0F,WAEZ1F,KAAK5B,MAAMiE,QAAQoC,MAGtB5G,EAAAC,EAAAC,cAACuH,EAAA,EAAD,KACEzH,EAAAC,EAAAC,cAAA,KAAGI,UAAU,sBACZ6B,KAAK5B,MAAMsF,cAIlB7F,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACbN,EAAAC,EAAAC,cAAA,UACEI,UAAU,kBACV8C,QAASjB,KAAK6E,aACdjE,SAAUZ,KAAK5B,MAAM0F,YAErBjG,EAAAC,EAAAC,cAAA,KAAGI,UAAU,uBALf,0BAtLckC,qCCqETsF,qBAxEb,SAAAA,EAAYzH,GAAO,IAAAD,EAAA,OAAA+F,OAAA4B,EAAA,EAAA5B,CAAAhE,KAAA2F,IACjB1H,EAAA+F,OAAA6B,EAAA,EAAA7B,CAAAhE,KAAAgE,OAAA8B,EAAA,EAAA9B,CAAA2B,GAAAI,KAAA/F,QAFF5B,MAAQ,GACWH,wEAIV,IAAA+G,EAAAhF,KACHqC,EAC2C,YAA7CrC,KAAK9B,MAAM8H,SAAS5H,MAAMiE,QAAQU,OAChClF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,4BACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,MAAII,UAAU,cAAd,UACAN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,aACXN,EAAAC,EAAAC,cAAA,KAAGkI,MAAM,yCACTpI,EAAAC,EAAAC,cAAA,QAAMI,UAAU,qBAAhB,8EAMJN,EAAAC,EAAAC,cAAA,MAAII,UAAU,+BACZN,EAAAC,EAAAC,cAAA,MAAII,UAAU,mBACZN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,OACdN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,sBACdN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,sBAEZ6B,KAAK9B,MAAM8H,SAAS5H,MAAMsF,cAIjC7F,EAAAC,EAAAC,cAAA,MAAII,UAAU,mBACZN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,OACdN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,sBACdN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,sBACZ6B,KAAK9B,MAAM8H,SAAS5H,MAAMiE,QAAQY,mBASjDpF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,aACdN,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,KAAGkI,MAAM,yBAQjB,MAHgD,KAA5CjG,KAAK9B,MAAM8H,SAAS5H,MAAMiE,QAAQW,QACpCX,EAAUxE,EAAAC,EAAAC,cAAA,WAAMiC,KAAK9B,MAAM8H,SAAS5H,MAAMiE,QAAQW,QAGlDnF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6BACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAY+H,MAAO,CAAEC,UAAW,WAC7CtI,EAAAC,EAAAC,cAAA,WAAMsE,GACNxE,EAAAC,EAAAC,cAAA,UACEI,UAAU,0BACV8C,QAAS,WACP+D,EAAK9G,MAAM4G,QAAQF,KAAK,OAH5B,wBA5DmBvE,cCwCd+F,mLAnCX,OACEvI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,KACExI,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iDACbN,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAMnI,UAAU,2BAA2BoI,GAAG,KAA9C,QAGA1I,EAAAC,EAAAC,cAAA,OACEI,UAAU,2BACVH,GAAG,0BAEHH,EAAAC,EAAAC,cAAA,MAAII,UAAU,sBACZN,EAAAC,EAAAC,cAAA,MAAII,UAAU,mBACZN,EAAAC,EAAAC,cAAA,KACEI,UAAU,WACVqI,IAAI,sBACJC,KAAK,4BACL5G,OAAO,UAJT,sBAYRhC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxD,IACjCxF,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWlB,aA9BvCtF,aCOEyG,QACW,cAA7BC,OAAOf,SAASgB,UAEe,UAA7BD,OAAOf,SAASgB,UAEhBD,OAAOf,SAASgB,SAASC,MACvB,2DCZNC,IAASC,OAAOtJ,EAAAC,EAAAC,cAACqJ,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/F,KAAK,SAAAgG,GACjCA,EAAaC","file":"static/js/main.c8cc27e6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Autosuggest from \"react-autosuggest\";\r\nconst getSuggestionValue = suggestion => suggestion.name;\r\n\r\nclass Planet extends Component {\r\n  renderSuggestion = suggestion => (\r\n    <div id={this.props.name}>\r\n      <i className=\"fas fa-globe mr-2\" />\r\n      {suggestion.name}\r\n    </div>\r\n  );\r\n  state = {\r\n    isLoaded: false,\r\n    selectedItem: {},\r\n    suggestions: [],\r\n    value: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoaded: true });\r\n  }\r\n  getSuggestions = value => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n    return inputLength === 0\r\n      ? []\r\n      : this.props.value.filter(\r\n          planet =>\r\n            planet.name.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n  };\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: this.getSuggestions(value)\r\n    });\r\n  };\r\n  onChange = (event, { newValue }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n    const index = this.props.value.findIndex(p => p.name === newValue);\r\n    const destination =\r\n      event.target.parentElement.parentElement.id === \"\"\r\n        ? event.target.id\r\n        : event.target.parentElement.parentElement.id;\r\n    this.props.onChange(destination, this.props.value[index]);\r\n  };\r\n  // Autosuggest will call this function every time you need to clear suggestions.\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n    const inputProps = {\r\n      placeholder: \"Planet..\",\r\n      value,\r\n      onChange: this.onChange\r\n    };\r\n    if (!this.state.isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else if (this.state.isLoaded) {\r\n      return (\r\n        <div id={this.props.name}>\r\n          <Autosuggest\r\n            suggestions={suggestions}\r\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n            getSuggestionValue={getSuggestionValue}\r\n            renderSuggestion={this.renderSuggestion}\r\n            inputProps={inputProps}\r\n            id={this.props.name}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Planet;\r\n","import React, { Component } from \"react\";\r\nclass Vehicle extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.value.map((vehicle, index) => (\r\n          <div key={index}>\r\n            <input\r\n              type=\"radio\"\r\n              name={this.props.name}\r\n              id={\"rad\" + this.props.name}\r\n              value={vehicle.speed}\r\n              disabled={\r\n                this.props.distance > vehicle.max_distance ||\r\n                vehicle.total_no <= 0\r\n              }\r\n              onChange={e => this.props.onClick(e.target, vehicle)}\r\n            />\r\n            <span>\r\n              {vehicle.name} ({vehicle.total_no})\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Vehicle;\r\n","export const myConfig = {\r\n  baseUrl: \"https://findfalcone.herokuapp.com\",\r\n  Planets: \"/planets\",\r\n  Vehicles: \"/vehicles\"\r\n};\r\n","import { myConfig } from \"./../config\";\r\nexport const HttpGet = resource => {\r\n  var url = `${myConfig.baseUrl}${resource}`;\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: {}\r\n  }).then(response => {\r\n    return response.json();\r\n  });\r\n};\r\nexport const HttpPost = (resource, body) => {\r\n  var url = `${myConfig.baseUrl}${resource}`;\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    body: body,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\"\r\n    }\r\n  });\r\n};\r\n","import { HttpGet } from \"../Util/HttpRequest\";\r\nimport { myConfig } from \"../config\";\r\nexport const PlanetApi = {\r\n  get: function() {\r\n    return HttpGet(myConfig.Planets);\r\n  }\r\n};\r\n","import { HttpGet } from \"../Util/HttpRequest\";\r\nimport { myConfig } from \"../config\";\r\n\r\nexport const VehicleApi = {\r\n  get: function() {\r\n    return HttpGet(myConfig.Vehicles).then(data => {\r\n      return data;\r\n    });\r\n  }\r\n};\r\n","import { HttpPost } from \"./HttpRequest\";\r\nlet Message = {};\r\nexport const FindFalcon = (planet_names, vehicle_names) => {\r\n  return new Promise((resolve, reject) => {\r\n    HttpPost(\"/token\")\r\n      .then(data => data.json())\r\n      .then(response => {\r\n        HttpPost(\r\n          \"/find\",\r\n          JSON.stringify({\r\n            token: response.token,\r\n            planet_names: planet_names,\r\n            vehicle_names: vehicle_names\r\n          })\r\n        )\r\n          .then(data => data.json())\r\n          .then(response => {\r\n            Message = {\r\n              status: response.status ? response.status : \"\",\r\n              error: response.error ? response.error : \"\",\r\n              planet_name: response.planet_name\r\n            };\r\n\r\n            resolve(Message);\r\n          });\r\n      });\r\n  });\r\n};\r\nexport const calculateTravelTime = (selectedVehicle, selectedPlanet) => {\r\n  var distance = selectedPlanet.distance;\r\n\r\n  var speed = selectedVehicle.speed;\r\n  return distance / speed;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Planet from \"./Planet\";\r\nimport Vehicle from \"./Vehicle\";\r\nimport { PlanetApi } from \"./../Service/planets\";\r\nimport { VehicleApi } from \"./../Service/vehicles\";\r\nimport { Alert } from \"reactstrap\";\r\nimport { FindFalcon, calculateTravelTime } from \"./../Util/Util\";\r\nclass LaunchPad extends Component {\r\n  state = {\r\n    Destinations: [\r\n      {\r\n        name: \"Destinations 1\",\r\n        value: \"destination1\",\r\n        isVehicleVisible: false\r\n      },\r\n      {\r\n        name: \"Destinations 2\",\r\n        value: \"destination2\",\r\n        isVehicleVisible: false\r\n      },\r\n      {\r\n        name: \"Destinations 3\",\r\n        value: \"destination3\",\r\n        isVehicleVisible: false\r\n      },\r\n      {\r\n        name: \"Destinations 4\",\r\n        value: \"destination4\",\r\n        isVehicleVisible: false\r\n      }\r\n    ],\r\n\r\n    Vehicles: [],\r\n    Planets: [],\r\n    selectedPlanet: \"\",\r\n    selectedVehicle: \"\",\r\n    travelTime: 0,\r\n    visitedPlanet: [],\r\n    visitedVehicle: [],\r\n    Message: {},\r\n    isOpen: false,\r\n    isDisabled: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ Vehicles: [] });\r\n    this.setState({ Planets: [] });\r\n\r\n    VehicleApi.get().then(Vehicles => {\r\n      this.setState({ Vehicles, isVehicleLoaded: true });\r\n    });\r\n    PlanetApi.get().then(Planets => {\r\n      this.setState({ Planets, isPlanetLoaded: true });\r\n    });\r\n  }\r\n\r\n  onPlanetChange = (destination, selectedPlanet) => {\r\n    const Destinations = [...this.state.Destinations];\r\n    if (selectedPlanet) {\r\n      console.log(this.state.Planets);\r\n      const index = Destinations.findIndex(i => i.value === destination);\r\n\r\n      const indexofselectedPlanet = this.state.Planets.indexOf(selectedPlanet);\r\n\r\n      if (indexofselectedPlanet !== -1) {\r\n        const selectedPlanet = this.state.Planets[indexofselectedPlanet];\r\n\r\n        Destinations[index].isVehicleVisible = true;\r\n        this.setState({ Destinations, selectedPlanet });\r\n      }\r\n    }\r\n  };\r\n\r\n  onVehicleChange = (e, selectedVehicle) => {\r\n    const Planets = [...this.state.Planets];\r\n    const visitedPlanet = [...this.state.visitedPlanet];\r\n    const visitedVehicle = [...this.state.visitedVehicle];\r\n    const Vehicles = [...this.state.Vehicles];\r\n\r\n    let travelTime = this.state.travelTime;\r\n\r\n    const indexofselectedPlanet = Planets.findIndex(\r\n      i => i.name === this.state.selectedPlanet.name\r\n    );\r\n    const indexofselectedVehicle = Vehicles.indexOf(selectedVehicle);\r\n\r\n    if (this.state.selectedPlanet === \"\") {\r\n      this.setState({\r\n        Message: { Text: \"Please select planet first\" },\r\n        isOpen: true\r\n      });\r\n      e.checked = false;\r\n      return false;\r\n    }\r\n\r\n    Planets.splice(indexofselectedPlanet, 1);\r\n    Vehicles[indexofselectedVehicle].total_no--;\r\n\r\n    travelTime += calculateTravelTime(\r\n      selectedVehicle,\r\n      this.state.selectedPlanet\r\n    );\r\n\r\n    visitedPlanet.push(this.state.selectedPlanet.name);\r\n    visitedVehicle.push(selectedVehicle.name);\r\n\r\n    this.setState({\r\n      visitedPlanet,\r\n      visitedVehicle,\r\n      selectedVehicle,\r\n      Planets,\r\n      selectedPlanet: \"\",\r\n      travelTime,\r\n      isDisabled: !visitedPlanet.length === 4 && visitedVehicle.length === 4\r\n    });\r\n  };\r\n\r\n  onFindFalcon = () => {\r\n    FindFalcon(this.state.visitedPlanet, this.state.visitedVehicle).then(\r\n      Message => {\r\n        this.setState({\r\n          Message,\r\n          isOpen: true\r\n        });\r\n        this.props.history.push({\r\n          pathname: \"/DisplayMessage\",\r\n          state: {\r\n            Message,\r\n            travelTime: this.state.travelTime\r\n          }\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          {this.state.Destinations.map(destination => (\r\n            <div className=\"col-lg-3\" key={destination.value}>\r\n              <h5 className=\"card-header\">{destination.name}</h5>\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div id={this.props.value}>\r\n                    <div className=\"card-text\">\r\n                      <Planet\r\n                        onChange={this.onPlanetChange}\r\n                        value={this.state.Planets}\r\n                        name={destination.value}\r\n                      />\r\n                      <div id={this.props.value}>\r\n                        {destination.isVehicleVisible ? (\r\n                          <Vehicle\r\n                            onClick={this.onVehicleChange}\r\n                            value={this.state.Vehicles}\r\n                            id={this.state.value}\r\n                            name={destination.value}\r\n                            distance={0}\r\n                          />\r\n                        ) : (\r\n                          \"Please Select Planet...\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"row mt-4\">\r\n          <div className=\"col-sm-12\">\r\n            <Alert\r\n              color={this.state.Message.Color}\r\n              isOpen={this.state.isOpen}\r\n              toggle={this.onDismiss}\r\n            >\r\n              {this.state.Message.Text}\r\n            </Alert>\r\n\r\n            <Alert>\r\n              <i className=\"far fa-clock mr-4\" />\r\n              {this.state.travelTime}\r\n            </Alert>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={this.onFindFalcon}\r\n            disabled={this.state.isDisabled}\r\n          >\r\n            <i className=\"fas fa-search mr-4\" />\r\n            Find Falcone!\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaunchPad;\r\n","import React, { Component } from \"react\";\r\n\r\nclass DisplayMessage extends Component {\r\n  state = {};\r\n  constructor(props) {\r\n    super();\r\n    debugger;\r\n  }\r\n  render() {\r\n    var Message =\r\n      this.props.location.state.Message.status === \"success\" ? (\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-8 pl-5 pr-5\">\r\n            <div className=\"card border-success mb-3\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Result</h5>\r\n                <p className=\"card-text\">\r\n                  <i class=\"far fa-grin fa-9x green align-middle\" />\r\n                  <span className=\"pl-4 text-justify\">\r\n                    Success! Congratulations on finding Falcone King Shan is\r\n                    mighty pleased.\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item\">\r\n                  <span className=\"row\">\r\n                    <span className=\"col-sm-4 text-left\">\r\n                      <i className=\"far fa-clock mr-3\" />\r\n\r\n                      {this.props.location.state.travelTime}\r\n                    </span>\r\n                  </span>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  <span className=\"row\">\r\n                    <span className=\"col-sm-4 text-left\">\r\n                      <i className=\"fas fa-globe mr-3\" />\r\n                      {this.props.location.state.Message.planet_name}\r\n                    </span>\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"row\">\r\n          <span className=\"col-md-12\">\r\n            <h1>Not Found !</h1>\r\n            <i class=\"far fa-frown fa-3x\" />\r\n          </span>\r\n        </div>\r\n      );\r\n\r\n    if (this.props.location.state.Message.error !== \"\") {\r\n      Message = <div>{this.props.location.state.Message.error}</div>;\r\n    }\r\n    return (\r\n      <div className=\"jumbotron jumbotron-fluid\">\r\n        <div className=\"container\" style={{ textAlign: \"center\" }}>\r\n          <div>{Message}</div>\r\n          <button\r\n            className=\"button btn-primary mt-4\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/\");\r\n            }}\r\n          >\r\n            Start Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayMessage;\r\n","import React, { Component } from \"react\";\nimport LaunchPad from \"./component/LaunchPad\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport DisplayMessage from \"./component/DisplayMessage\";\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"navbar-brand fas fa-home\" to=\"/\">\n              Home\n            </Link>\n            <div\n              className=\"collapse navbar-collapse\"\n              id=\"navbarSupportedContent\"\n            >\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                  <a\n                    className=\"nav-link\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://www.geektrust.in/\"\n                    target=\"_blank\"\n                  >\n                    GeekTrust Home\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <hr />\n\n          <Route exact path=\"/\" component={LaunchPad} />\n          <Route exact path=\"/DisplayMessage\" component={DisplayMessage} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}